pipeline {
    agent any

    environment {
        ACR_LOGIN_SERVER = 'demoregistry1001.azurecr.io'    // your ACR login server
        IMAGE_NAME = 'nodeconsoleapp1'                      // your image name
        CREDENTIALS_ID = 'jenkins-pipeline-sp'              // Jenkins ACR credentials ID
        KUBECONFIG_CREDENTIAL_ID = 'kubeconfig-cred-id'     // (new) Jenkins ID for kubeconfig
    }

    stages {
        stage('Clone Repository') {
            steps {
                git url: 'https://github.com/rani25lodha/AssissmentCapgemini', branch: 'main'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    dockerImage = docker.build("${ACR_LOGIN_SERVER}/${IMAGE_NAME}:latest", "NodeConsoleApp1")
                }
            }
        }

        stage('Push to Azure ACR') {
            steps {
                script {
                    docker.withRegistry("https://${ACR_LOGIN_SERVER}", "${CREDENTIALS_ID}") {
                        dockerImage.push('latest')
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: "${KUBECONFIG_CREDENTIAL_ID}", variable: 'KUBECONFIG')]) {
                    sh '''
                    kubectl apply -f deployment.yaml
                    kubectl apply -f service.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Image pushed and deployed to Kubernetes successfully!'
        }
        failure {
            echo '❌ Pipeline failed during some step!'
        }
    }
}
